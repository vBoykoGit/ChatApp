{"version":3,"sources":["../src/index.js"],"names":["PORT","app","server","http","createServer","use","exposedHeaders","bodyParser","json","limit","wss","Server","wwwPath","path","join","__dirname","express","static","Database","connect","then","db","console","log","catch","err","models","Model","routers","AppRouter","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAGA;;;AAGAA,IAAII,GAAJ,CAAQ,oBAAK;AACTC,iBAAgB;AADP,CAAL,CAAR;;AAIAL,IAAII,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB;AACpBC,QAAO;AADa,CAAhB,CAAR;;AAMAR,IAAIS,GAAJ,GAAU,IAAIC,WAAJ,CAAW;AACpBT,SAAQD,IAAIC;AADQ,CAAX,CAAV;;AAKA;AACA,IAAMU,UAAUC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAhB;;AAEAd,IAAII,GAAJ,CAAQ,GAAR,EAAaW,kBAAQC,MAAR,CAAeL,OAAf,CAAb;;AAEA;;AAEA,IAAIM,kBAAJ,GAAeC,OAAf,GAAyBC,IAAzB,CAA8B,UAACC,EAAD,EAAQ;;AAErCC,SAAQC,GAAR,CAAY,mCAAZ;;AAEAtB,KAAIoB,EAAJ,GAASA,EAAT;AAEA,CAND,EAMGG,KANH,CAMS,UAACC,GAAD,EAAS;;AAGjB,OAAMA,GAAN;AACA,CAVD;;AAaA;;AAEAxB,IAAIyB,MAAJ,GAAa,IAAIC,gBAAJ,CAAU1B,GAAV,CAAb;AACAA,IAAI2B,OAAJ,GAAc,IAAIC,mBAAJ,CAAc5B,GAAd,CAAd;;AAMAA,IAAIC,MAAJ,CAAW4B,MAAX,CAAkBC,QAAQC,GAAR,CAAYhC,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC1CsB,SAAQC,GAAR,6BAAsCtB,IAAIC,MAAJ,CAAW+B,OAAX,GAAqBC,IAA3D;AACP,CAFD;;kBAIejC,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport {version} from '../package.json'\nimport WebSocketServer, {Server} from 'uws';\nimport AppRouter from './app-router'\nimport Model from './models'\nimport Database from './database'\nimport path from 'path'\n\nconst PORT = 3001;\nconst app = express();\napp.server = http.createServer(app);\n\n\n//app.use(morgan('dev'));\n\n\napp.use(cors({\n    exposedHeaders: \"*\"\n}));\n\napp.use(bodyParser.json({\n    limit: '50mb'\n}));\n\n\n\napp.wss = new Server({\n\tserver: app.server\n});\n\n\n// static www files use express\nconst wwwPath = path.join(__dirname, 'www');\n\napp.use('/', express.static(wwwPath));\n\n// Connect to Mongo Database\n\nnew Database().connect().then((db) => {\n\n\tconsole.log(\"Successful connected to database.\")\n\n\tapp.db = db;\n\t\n}).catch((err) => {\n\n\n\tthrow(err);\n});\n\n\n// End connect to Mongodb Database\n\napp.models = new Model(app);\napp.routers = new AppRouter(app);\n\n\n\n\n\napp.server.listen(process.env.PORT || PORT, () => {\n        console.log(`App is running on port ${app.server.address().port}`);\n});\n\nexport default app;"]}